package ComputerLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseConstraintsAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class ConstraintsAspectDescriptor extends BaseConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }

  @Override
  public ConstraintsDescriptor getConstraints(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0c = concept;
    switch (index_2qnle6_a0c.index(cncpt_a0c)) {
      case 0:
        return new CentralProcessingUnit_Constraints();
      case 1:
        return new Component_Constraints();
      case 2:
        return new ComputerCase_Constraints();
      case 3:
        return new GPUWrapper_Constraints();
      case 4:
        return new GamesList_Constraints();
      case 5:
        return new GraphicsCard_Constraints();
      case 6:
        return new HardDrive_Constraints();
      case 7:
        return new MotherBoard_Constraints();
      case 8:
        return new PowerSupply_Constraints();
      case 9:
        return new RandomAccessMemory_Constraints();
      case 10:
        return new SolidStateDrive_Constraints();
      case 11:
        return new WirelessNetworkAdapter_Constraints();
      default:
    }
    return new BaseConstraintsDescriptor(concept);
  }
  private static final ConceptSwitchIndex index_2qnle6_a0c = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626ef92L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd6c1ed4L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L), MetaIdFactory.conceptId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L)).seal();
}
