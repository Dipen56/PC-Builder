package ComputerLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class RandomAccessMemory_Constraints extends BaseConstraintsDescriptor {
  public RandomAccessMemory_Constraints() {
    super(MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, "ComputerLanguage.structure.RandomAccessMemory"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "ramName";
        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), (SPropertyOperations.getString(propertyValue)));
        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828eL, "type"), "DDR4");
        if ((SPropertyOperations.getString(propertyValue)).equals("AData XPG")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (16));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2400));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("Corsair Vengeance")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (8));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2666));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("G.Skill RipJaws")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (8));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2400));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("G.Skill Trident")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (16));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (3200));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("Kingston HyperX")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (16));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2400));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("Kingston ValueRAM")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (16));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2133));
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "capcityGB";
        if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("AData XPG")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (16));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Corsair Vengeance")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (8));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("G.Skill RipJaws")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (8));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("G.Skill Trident")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (16));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Kingston HyperX")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (16));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Kingston ValueRAM")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef858289L, "capcityGB"), "" + (16));
        }

      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "busSpeed";
        if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("AData XPG")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2400));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Corsair Vengeance")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2666));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("G.Skill RipJaws")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2400));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("G.Skill Trident")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (3200));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Kingston HyperX")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2400));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Kingston ValueRAM")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"), "" + (2133));
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828eL, "type"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828eL), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "type";
        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828eL, "type"), "DDR4");
      }
    });
    return properties;
  }
}
