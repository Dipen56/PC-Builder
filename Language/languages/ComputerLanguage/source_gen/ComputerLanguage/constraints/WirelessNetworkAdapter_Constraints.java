package ComputerLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class WirelessNetworkAdapter_Constraints extends BaseConstraintsDescriptor {
  public WirelessNetworkAdapter_Constraints() {
    super(MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, "ComputerLanguage.structure.WirelessNetworkAdapter"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "wifiName";
        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), (SPropertyOperations.getString(propertyValue)));
        if ((SPropertyOperations.getString(propertyValue)).equals("Gigabyte GC-WB867D-I")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (867));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("TP-LINK-WN881ND")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (1200));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("ASUS PCE-AC55BT")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (3167));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("ASUS PCE-AE88")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (450));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("TP-LINK-WDN4800")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (300));
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "dataLinkLayer";
        if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("Gigabyte GC-WB867D-I")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("TP-LINK-WN881ND")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("ASUS PCE-AC55BT")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("ASUS PCE-AE88")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("TP-LINK-WDN4800")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef858293L, "dataLinkLayer"), "IEEE-802.11n");
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "trasferRate";
        if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("Gigabyte GC-WB867D-I")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (867));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("ASUS PCE-AC55BT")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (1200));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("ASUS PCE-AE88")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (3167));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I").equals("TP-LINK-WDN4800")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (450));
        } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).equals("TP-LINK-WN881ND")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x58d6939bef8582b0L, "trasferRate"), "" + (300));
        }
      }
    });
    return properties;
  }
}
