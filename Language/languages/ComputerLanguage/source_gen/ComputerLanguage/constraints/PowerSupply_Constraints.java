package ComputerLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class PowerSupply_Constraints extends BaseConstraintsDescriptor {
  public PowerSupply_Constraints() {
    super(MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, "ComputerLanguage.structure.PowerSupply"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x3a92f6bfe3c45730L, "psuName"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x3a92f6bfe3c45730L), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "psuName";
        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x3a92f6bfe3c45730L, "psuName"), (SPropertyOperations.getString(propertyValue)));
        if ((SPropertyOperations.getString(propertyValue)).equals("Corsair RM750x")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x55289da3a626f175L, "capacity"), "" + (750));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("EVGA 500 B1")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x55289da3a626f175L, "capacity"), "" + (500));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("be quiet! Straight Power 10")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x55289da3a626f175L, "capacity"), "" + (700));
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x55289da3a626f175L, "capacity"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x55289da3a626f175L), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "capacity";
        if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x3a92f6bfe3c45730L, "psuName"), "Corsair RM750x").equals("Corsair RM750x")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x55289da3a626f175L, "capacity"), "" + (750));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x3a92f6bfe3c45730L, "psuName"), "Corsair RM750x").equals("EVGA 500 B1")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x55289da3a626f175L, "capacity"), "" + (500));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x3a92f6bfe3c45730L, "psuName"), "Corsair RM750x").equals("be quiet! Straight Power 10")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x55289da3a626f175L, "capacity"), "" + (700));
        }
      }
    });
    return properties;
  }
}
