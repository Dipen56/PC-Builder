package ComputerLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class SolidStateDrive_Constraints extends BaseConstraintsDescriptor {
  public SolidStateDrive_Constraints() {
    super(MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, "ComputerLanguage.structure.SolidStateDrive"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "driveName";
        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), (SPropertyOperations.getString(propertyValue)));
        if ((SPropertyOperations.getString(propertyValue)).equals("Crucial MX300")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (525));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (530));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (510));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("Apacer Armor AS681")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (512));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (565));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (520));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("Samsung SSD 850 Pro")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (512));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (550));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (520));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("Toshiba OCZ VX500")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (512));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (437));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (447));
        } else if ((SPropertyOperations.getString(propertyValue)).equals("WD Blue SSD")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (500));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (545));
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (525));
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "storageCapacity";
        if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Crucial MX300")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (525));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Apacer Armor AS681")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (512));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Samsung SSD 850 Pro")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (512));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Toshiba OCZ VX500")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (512));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("WD Blue SSD")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379dL, "storageCapacity"), "" + (500));
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "readSpeed";
        if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Crucial MX300")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (530));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Apacer Armor AS681")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (565));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Samsung SSD 850 Pro")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (550));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Toshiba OCZ VX500")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (437));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("WD Blue SSD")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379eL, "readSpeed"), "" + (545));
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "writeSpeed";
        if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Crucial MX300")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (510));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Apacer Armor AS681")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (520));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Samsung SSD 850 Pro")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (520));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Toshiba OCZ VX500")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (447));
        } else if (SPropertyOperations.getString_def(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("WD Blue SSD")) {
          SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379fL, "writeSpeed"), "" + (525));
        }
      }
    });
    return properties;
  }
}
