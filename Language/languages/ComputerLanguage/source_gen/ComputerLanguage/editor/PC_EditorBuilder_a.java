package ComputerLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Indent;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_DeleteSmart;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.openapi.editor.menus.transformation.SNodeLocation;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;

/*package*/ class PC_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public PC_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createCollection_mi2k6k_a();
  }

  private EditorCell createCollection_mi2k6k_a() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Indent());
    editorCell.setCellId("Collection_mi2k6k_a");
    editorCell.setBig(true);
    editorCell.setCellContext(getCellFactory().getCellContext());
    editorCell.addEditorCell(createConstant_mi2k6k_a0());
    editorCell.addEditorCell(createProperty_mi2k6k_b0());
    editorCell.addEditorCell(createRefNode_mi2k6k_c0());
    editorCell.addEditorCell(createConstant_mi2k6k_d0());
    editorCell.addEditorCell(createCollection_mi2k6k_e0());
    return editorCell;
  }
  private EditorCell createConstant_mi2k6k_a0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "PC Name");
    editorCell.setCellId("Constant_mi2k6k_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_mi2k6k_b0() {
    CellProviderWithRole provider = new PropertyCellProvider(myNode, getEditorContext());
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(getEditorContext());
    editorCell.setCellId("property_name");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(getEditorContext());
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createRefNode_mi2k6k_c0() {
    SingleRoleCellProvider provider = new PC_EditorBuilder_a.userSingleRoleHandler_mi2k6k_c0(myNode, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user"), getEditorContext());
    return provider.createCell();
  }
  private static class userSingleRoleHandler_mi2k6k_c0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public userSingleRoleHandler_mi2k6k_c0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user"), child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user"), child));
      installCellInfo(child, editorCell);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo(new SChildSubstituteInfo(editorCell, myNode, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user"), child));
      }
      if (editorCell.getRole() == null) {
        editorCell.setRole("user");
      }
      Style style = new StyleImpl();
      style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
      editorCell.getStyle().putAll(style);
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user")));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_user");
        installCellInfo(null, editorCell);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no user>";
    }
  }
  private EditorCell createConstant_mi2k6k_d0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Components:");
    editorCell.setCellId("Constant_mi2k6k_d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_mi2k6k_e0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_mi2k6k_e0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createConstant_mi2k6k_a4a());
    editorCell.addEditorCell(createRefNode_mi2k6k_b4a());
    editorCell.addEditorCell(createConstant_mi2k6k_c4a());
    editorCell.addEditorCell(createRefNode_mi2k6k_d4a());
    editorCell.addEditorCell(createConstant_mi2k6k_e4a());
    editorCell.addEditorCell(createRefNode_mi2k6k_f4a());
    return editorCell;
  }
  private EditorCell createConstant_mi2k6k_a4a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Computer Case:");
    editorCell.setCellId("Constant_mi2k6k_a4a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_mi2k6k_b4a() {
    SingleRoleCellProvider provider = new PC_EditorBuilder_a.computerCaseSingleRoleHandler_mi2k6k_b4a(myNode, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd50233eL, "computerCase"), getEditorContext());
    return provider.createCell();
  }
  private static class computerCaseSingleRoleHandler_mi2k6k_b4a extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public computerCaseSingleRoleHandler_mi2k6k_b4a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd50233eL, "computerCase"), child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd50233eL, "computerCase"), child));
      installCellInfo(child, editorCell);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo(new SChildSubstituteInfo(editorCell, myNode, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd50233eL, "computerCase"), child));
      }
      if (editorCell.getRole() == null) {
        editorCell.setRole("computerCase");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd50233eL, "computerCase")));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_computerCase");
        installCellInfo(null, editorCell);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no computerCase>";
    }
  }
  private EditorCell createConstant_mi2k6k_c4a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Mother Board:");
    editorCell.setCellId("Constant_mi2k6k_c4a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_mi2k6k_d4a() {
    SingleRoleCellProvider provider = new PC_EditorBuilder_a.motherBoardSingleRoleHandler_mi2k6k_d4a(myNode, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502341L, "motherBoard"), getEditorContext());
    return provider.createCell();
  }
  private static class motherBoardSingleRoleHandler_mi2k6k_d4a extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public motherBoardSingleRoleHandler_mi2k6k_d4a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502341L, "motherBoard"), child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502341L, "motherBoard"), child));
      installCellInfo(child, editorCell);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo(new SChildSubstituteInfo(editorCell, myNode, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502341L, "motherBoard"), child));
      }
      if (editorCell.getRole() == null) {
        editorCell.setRole("motherBoard");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502341L, "motherBoard")));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_motherBoard");
        installCellInfo(null, editorCell);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no motherBoard>";
    }
  }
  private EditorCell createConstant_mi2k6k_e4a() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "Power Supply:");
    editorCell.setCellId("Constant_mi2k6k_e4a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_mi2k6k_f4a() {
    SingleRoleCellProvider provider = new PC_EditorBuilder_a.powerSupplySingleRoleHandler_mi2k6k_f4a(myNode, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502345L, "powerSupply"), getEditorContext());
    return provider.createCell();
  }
  private static class powerSupplySingleRoleHandler_mi2k6k_f4a extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public powerSupplySingleRoleHandler_mi2k6k_f4a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502345L, "powerSupply"), child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502345L, "powerSupply"), child));
      installCellInfo(child, editorCell);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo(new SChildSubstituteInfo(editorCell, myNode, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502345L, "powerSupply"), child));
      }
      if (editorCell.getRole() == null) {
        editorCell.setRole("powerSupply");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x4b7b57ebd502345L, "powerSupply")));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_powerSupply");
        installCellInfo(null, editorCell);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no powerSupply>";
    }
  }
}
