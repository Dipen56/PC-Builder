package main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.template.PropertyMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;

@Generated
public class QueriesGenerated {
  public static Object propertyMacro_GetPropertyValue_848084820050498163(final PropertyMacroContext _context) {

    double totalcost = 0;
    for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(_context.getNode()))) {
      if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, "ComputerLanguage.structure.MotherBoard"))) {
        String motherboardCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
        totalcost += Double.parseDouble(motherboardCost);
        for (SNode childschild : ListSequence.fromList(SNodeOperations.getChildren(child))) {
          if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, "ComputerLanguage.structure.CentralProcessingUnit"))) {
            String cpuCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
            totalcost += Double.parseDouble(cpuCost);
            for (SNode childschildschild : ListSequence.fromList(SNodeOperations.getChildren(childschild))) {
              if (SNodeOperations.isInstanceOf(childschildschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0xbc500a6864c3a83L, "ComputerLanguage.structure.PCCooling"))) {
                String cpuFanCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
                totalcost += Double.parseDouble(cpuFanCost);
              }
            }
          } else if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, "ComputerLanguage.structure.WirelessNetworkAdapter"))) {
            String wifiAdapterCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
            totalcost += Double.parseDouble(wifiAdapterCost);
          } else if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, "ComputerLanguage.structure.GraphicsCard"))) {
            String gpuCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
            totalcost += Double.parseDouble(gpuCost);
          } else if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, "ComputerLanguage.structure.HardDrive"))) {
            String hardDriveCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
            totalcost += Double.parseDouble(hardDriveCost);
          } else if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, "ComputerLanguage.structure.RandomAccessMemory"))) {
            String ramCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
            totalcost += Double.parseDouble(ramCost);
          } else if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, "ComputerLanguage.structure.SolidStateDrive"))) {
            String soildStateCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
            totalcost += Double.parseDouble(soildStateCost);
          }
        }
      } else if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626ef92L, "ComputerLanguage.structure.ComputerCase"))) {
        String computerCaseCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
        totalcost += Double.parseDouble(computerCaseCost);
        for (SNode childschild : ListSequence.fromList(SNodeOperations.getChildren(child))) {
          if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0xbc500a6864c3a83L, "ComputerLanguage.structure.PCCooling"))) {
            String casefanCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
            totalcost += Double.parseDouble(casefanCost);
          }
        }
      } else if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, "ComputerLanguage.structure.PowerSupply"))) {
        String powerSupplyCost = SPropertyOperations.getString(((SNode) child), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")).toString();
        totalcost += Double.parseDouble(powerSupplyCost);
      }
    }
    return String.valueOf(totalcost);
  }
  public static Object propertyMacro_GetPropertyValue_848084820047614738(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_600042011697039891(final PropertyMacroContext _context) {
    int performance = 0;
    for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(_context.getNode()))) {
      if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, "ComputerLanguage.structure.MotherBoard"))) {
        SNode mb = ((SNode) child);
        if (SPropertyOperations.getString_def(mb, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, 0x1cca5a48a9c8cf39L, "motherBoardName"), "Gigabyte Aorus Z270X-Gaming").equals("ASRock Z270 Gaming-ITX/ac")) {
          performance = 1;
        } else if (SPropertyOperations.getString_def(mb, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, 0x1cca5a48a9c8cf39L, "motherBoardName"), "Gigabyte Aorus Z270X-Gaming").equals("ASRock Z270 Killer SLI/ac")) {
          performance = 4;
        } else if (SPropertyOperations.getString_def(mb, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, 0x1cca5a48a9c8cf39L, "motherBoardName"), "Gigabyte Aorus Z270X-Gaming").equals("ASUS RoG Maximus IX Hero")) {
          performance = 5;
        } else if (SPropertyOperations.getString_def(mb, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, 0x1cca5a48a9c8cf39L, "motherBoardName"), "Gigabyte Aorus Z270X-Gaming").equals("Biostar Racing")) {
          performance = 7;
        } else if (SPropertyOperations.getString_def(mb, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, 0x1cca5a48a9c8cf39L, "motherBoardName"), "Gigabyte Aorus Z270X-Gaming").equals("ECS Z270H4-I")) {
          performance = 6;
        } else if (SPropertyOperations.getString_def(mb, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, 0x1cca5a48a9c8cf39L, "motherBoardName"), "Gigabyte Aorus Z270X-Gaming").equals("Gigabyte Aorus Z270X-Gaming")) {
          performance = 3;
        } else if (SPropertyOperations.getString_def(mb, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, 0x1cca5a48a9c8cf39L, "motherBoardName"), "Gigabyte Aorus Z270X-Gaming").equals("MSI Z270 SLI Plus")) {
          performance = 2;
        }
      }
    }
    return String.valueOf(performance);
  }
  public static Object propertyMacro_GetPropertyValue_6706018852225333276(final PropertyMacroContext _context) {
    Double value = 0.0;
    for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(_context.getNode()))) {
      if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, "ComputerLanguage.structure.MotherBoard"))) {
        for (SNode childschild : ListSequence.fromList(SNodeOperations.getChildren(child))) {
          SNode cpu = ((SNode) childschild);
          if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, "ComputerLanguage.structure.CentralProcessingUnit"))) {
            if (SPropertyOperations.getString_def(cpu, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, 0x1cca5a48a9d0cafbL, "cpuName"), "Intel Core i7-7700K").equals("Intel Core i7-7700K")) {
              // Core i7 7700K 495 Max score 
              value = 495.0;
            } else if (SPropertyOperations.getString_def(cpu, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, 0x1cca5a48a9d0cafbL, "cpuName"), "Intel Core i7-7700K").equals("AMD Ryzen 3 1300X")) {
              value = 116.0;
            } else if (SPropertyOperations.getString_def(cpu, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, 0x1cca5a48a9d0cafbL, "cpuName"), "Intel Core i7-7700K").equals("AMD Ryzen 5 1600X")) {
              value = 388.0;
            } else if (SPropertyOperations.getString_def(cpu, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, 0x1cca5a48a9d0cafbL, "cpuName"), "Intel Core i7-7700K").equals("AMD Ryzen Threadripper 1950X")) {
              value = 490.0;
            } else if (SPropertyOperations.getString_def(cpu, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, 0x1cca5a48a9d0cafbL, "cpuName"), "Intel Core i7-7700K").equals("Intel Core i5-7600K")) {
              value = 474.0;
            } else if (SPropertyOperations.getString_def(cpu, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, 0x1cca5a48a9d0cafbL, "cpuName"), "Intel Core i7-7700K").equals("Intel Pentium G4560")) {
              value = 353.0;
            }
          }
        }
      }
    }
    Double result = (value / 495.0 * 100);
    String finalR = result.toString();
    char[] rArray = finalR.toCharArray();
    String temp = "";
    for (int i = 0; i < rArray.length; i++) {
      if (rArray[i] != '.') {
        temp += String.valueOf(rArray[i]);
      } else {
        break;
      }
    }
    return temp;
  }
  public static Object propertyMacro_GetPropertyValue_709201640124317845(final PropertyMacroContext _context) {
    Double value = 0.0;
    for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(_context.getNode()))) {
      if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, "ComputerLanguage.structure.MotherBoard"))) {
        for (SNode childschild : ListSequence.fromList(SNodeOperations.getChildren(child))) {
          if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd6c1d59L, "ComputerLanguage.structure.HDDWrapper"))) {
            SNode hdd = ((SNode) childschild);
            for (SNode hddChild : ListSequence.fromList(SLinkOperations.getChildren(hdd, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd6c1d59L, 0x853c707cd6c1d75L, "hdd")))) {
              SNode h = ((SNode) hddChild);
              if (SPropertyOperations.getString_def(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x7c6dc1906f90352cL, "driveName"), "WD Blue").equals("Seagate IronWolf")) {
                value = ((double) ((SPropertyOperations.getInteger(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x536ac53f1f5737aaL, "readSpeed")) + SPropertyOperations.getInteger(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x536ac53f1f5737abL, "writeSpeed"))) / 2));
              } else if (SPropertyOperations.getString_def(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x7c6dc1906f90352cL, "driveName"), "WD Blue").equals("Toshiba P300")) {
                value = ((double) ((SPropertyOperations.getInteger(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x536ac53f1f5737aaL, "readSpeed")) + SPropertyOperations.getInteger(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x536ac53f1f5737abL, "writeSpeed"))) / 2));
              } else if (SPropertyOperations.getString_def(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x7c6dc1906f90352cL, "driveName"), "WD Blue").equals("WD Blue")) {
                value = ((double) ((SPropertyOperations.getInteger(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x536ac53f1f5737aaL, "readSpeed")) + SPropertyOperations.getInteger(h, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x536ac53f1f5737abL, "writeSpeed"))) / 2));
              }
            }
          }
        }
      }
    }
    Double result = (value / 240.0 * 100);
    String finalR = result.toString();
    char[] rArray = finalR.toCharArray();
    String temp = "";
    for (int i = 0; i < rArray.length; i++) {
      if (rArray[i] != '.') {
        temp += String.valueOf(rArray[i]);
      } else {
        break;
      }
    }
    return temp;

  }
  public static Object propertyMacro_GetPropertyValue_9091522320588594334(final PropertyMacroContext _context) {
    Double value = 0.0;
    for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(_context.getNode()))) {
      if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, "ComputerLanguage.structure.MotherBoard"))) {
        for (SNode childschild : ListSequence.fromList(SNodeOperations.getChildren(child))) {
          if (SNodeOperations.isInstanceOf(childschild, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd67310eL, "ComputerLanguage.structure.SSDWrapper"))) {
            SNode ssd = ((SNode) childschild);
            for (SNode ssdChild : ListSequence.fromList(SLinkOperations.getChildren(ssd, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd67310eL, 0x853c707cd67312aL, "ssd")))) {
              SNode s = ((SNode) ssdChild);
              if ((SPropertyOperations.getString_def((SNode) s, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300")).equals("Crucial MX300")) {
                // figure is calcualated by candidate WRITE SPEED / MAXIMUM WRITE SPEED. 
                value = 530.0;
              } else if (SPropertyOperations.getString_def(((SNode) s), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Apacer Armor AS681")) {
                value = 385.0;
              } else if (SPropertyOperations.getString_def(((SNode) s), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Samsung SSD 850 Pro")) {
                value = 520.0;
              } else if (SPropertyOperations.getString_def(((SNode) s), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Toshiba OCZ VX500")) {
                value = 521.0;
              } else if (SPropertyOperations.getString_def(((SNode) s), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("WD Blue SSD")) {
                value = 500.0;
              } else if (SPropertyOperations.getString_def(((SNode) s), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300").equals("Kingston SSDNow")) {
                value = 450.0;
              }
            }
          }
        }
      }
    }
    Double result = (value / 530.0 * 100);
    String finalR = result.toString();
    char[] rArray = finalR.toCharArray();
    String temp = "";
    for (int i = 0; i < rArray.length; i++) {
      if (rArray[i] != '.') {
        temp += String.valueOf(rArray[i]);
      } else {
        break;
      }
    }
    return temp;
  }
  public static Object propertyMacro_GetPropertyValue_6355702564005745278(final PropertyMacroContext _context) {
    int value = 0;
    for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(_context.getNode()))) {
      if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, "ComputerLanguage.structure.MotherBoard"))) {
        for (SNode childschild : ListSequence.fromList(SNodeOperations.getChildren(child))) {
          SNode ram = ((SNode) childschild);
          for (SNode ramChild : ListSequence.fromList(SLinkOperations.getChildren(ram, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x9d797225990c617L, 0x9d797225990c633L, "ram")))) {
            SNode r = ((SNode) ramChild);
            if (SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("AData XPG")) {
              value = SPropertyOperations.getInteger(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"));
            } else if (SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Corsair Vengeance")) {
              value = SPropertyOperations.getInteger(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"));
            } else if (SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("G.Skill RipJaws")) {
              value = SPropertyOperations.getInteger(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"));
            } else if (SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("G.Skill Trident")) {
              value = SPropertyOperations.getInteger(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"));
            } else if (SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Kingston HyperX")) {
              value = SPropertyOperations.getInteger(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"));
            } else if (SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance").equals("Kingston ValueRAM")) {
              value = SPropertyOperations.getInteger(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x58d6939bef85828bL, "busSpeed"));
            }
          }
        }
      }
    }
    Double result = (value / 3200.0 * 100);
    String finalR = result.toString();
    char[] rArray = finalR.toCharArray();
    String temp = "";
    for (int i = 0; i < rArray.length; i++) {
      if (rArray[i] != '.') {
        temp += String.valueOf(rArray[i]);
      } else {
        break;
      }
    }
    return temp;
  }
  public static Object propertyMacro_GetPropertyValue_600042011694897015(final PropertyMacroContext _context) {
    int value = 0;
    for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(_context.getNode()))) {
      if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, "ComputerLanguage.structure.MotherBoard"))) {
        for (SNode childschild : ListSequence.fromList(SNodeOperations.getChildren(child))) {
          SNode gpu = ((SNode) childschild);
          for (SNode gpuChild : ListSequence.fromList(SLinkOperations.getChildren(gpu, MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd6c1ed4L, 0x853c707cd6c1ef0L, "gpu")))) {
            SNode g = ((SNode) gpuChild);
            if (SPropertyOperations.getString_def(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x7c6dc1906f8efeaeL, "gpuName"), "EVGA GeForce GTX 1080").equals("AMD Radeon RX Vega")) {
              value = SPropertyOperations.getInteger(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x58d6939bef85826fL, "gflops"));
            } else if (SPropertyOperations.getString_def(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x7c6dc1906f8efeaeL, "gpuName"), "EVGA GeForce GTX 1080").equals("Asus ROG STRIX GTX 1080")) {
              value = SPropertyOperations.getInteger(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x58d6939bef85826fL, "gflops"));
            } else if (SPropertyOperations.getString_def(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x7c6dc1906f8efeaeL, "gpuName"), "EVGA GeForce GTX 1080").equals("Asus ROG Strix Radeon RX 580")) {
              value = SPropertyOperations.getInteger(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x58d6939bef85826fL, "gflops"));
            } else if (SPropertyOperations.getString_def(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x7c6dc1906f8efeaeL, "gpuName"), "EVGA GeForce GTX 1080").equals("EVGA GeForce GTX 1080")) {
              value = SPropertyOperations.getInteger(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x58d6939bef85826fL, "gflops"));
            } else if (SPropertyOperations.getString_def(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x7c6dc1906f8efeaeL, "gpuName"), "EVGA GeForce GTX 1080").equals("MSI GeForce GTX 1070")) {
              value = SPropertyOperations.getInteger(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x58d6939bef85826fL, "gflops"));
            } else if (SPropertyOperations.getString_def(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x7c6dc1906f8efeaeL, "gpuName"), "EVGA GeForce GTX 1080").equals("Nvidia GeForce GTX 1060")) {
              value = SPropertyOperations.getInteger(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x58d6939bef85826fL, "gflops"));
            } else if (SPropertyOperations.getString_def(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x7c6dc1906f8efeaeL, "gpuName"), "EVGA GeForce GTX 1080").equals("Zotac GeForce GTX 1050")) {
              value = SPropertyOperations.getInteger(g, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x58d6939bef85826fL, "gflops"));
            }
          }
        }
      }
    }
    Double result = (value / 13700.0 * 100);
    String finalR = result.toString();
    char[] rArray = finalR.toCharArray();
    String temp = "";
    for (int i = 0; i < rArray.length; i++) {
      if (rArray[i] != '.') {
        temp += String.valueOf(rArray[i]);
      } else {
        break;
      }
    }
    return temp;
  }
  public static Object propertyMacro_GetPropertyValue_46256062278630978(final PropertyMacroContext _context) {
    String currentGame = "No game selected";
    for (SNode child : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user")), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9746b0L, 0x6c32b212dc974792L, "games")))) {
      currentGame = SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").toString();
    }
    return currentGame;
  }
  public static Object propertyMacro_GetPropertyValue_46256062281376871(final PropertyMacroContext _context) {
    Double value = 0.0;
    for (SNode child : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user")), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9746b0L, 0x6c32b212dc974792L, "games")))) {
      if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Battlefield 1")) {
        value = 404.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Counter-Strike: Global Offensive")) {
        value = 232.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Dota 2")) {
        value = 54.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Elder Scrolls Online")) {
        value = 178.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("GTA 5")) {
        value = 352.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("H1Z1 King of the Kill")) {
        value = 308.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Hearthstone")) {
        value = 87.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("League of Legends")) {
        value = 54.0;
      }
    }
    Double result = (value / 495.0 * 100);
    String finalR = result.toString();
    char[] rArray = finalR.toCharArray();
    String temp = "";
    for (int i = 0; i < rArray.length; i++) {
      if (rArray[i] != '.') {
        temp += String.valueOf(rArray[i]);
      } else {
        break;
      }
    }
    return temp;
  }
  public static Object propertyMacro_GetPropertyValue_46256062281378811(final PropertyMacroContext _context) {
    Double value = 0.0;
    for (SNode child : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user")), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9746b0L, 0x6c32b212dc974792L, "games")))) {
      if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Battlefield 1")) {
        value = 4000.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Counter-Strike: Global Offensive")) {
        value = 311.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Dota 2")) {
        value = 139.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Elder Scrolls Online")) {
        value = 346.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("GTA 5")) {
        value = 336.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("H1Z1 King of the Kill")) {
        value = 1086.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Hearthstone")) {
        value = 346.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("League of Legends")) {
        value = 346.0;
      }
    }
    Double result = (value / 11300 * 100);
    String finalR = result.toString();
    char[] rArray = finalR.toCharArray();
    String temp = "";
    for (int i = 0; i < rArray.length; i++) {
      if (rArray[i] != '.') {
        temp += String.valueOf(rArray[i]);
      } else {
        break;
      }
    }
    return temp;
  }
  public static Object propertyMacro_GetPropertyValue_46256062281383141(final PropertyMacroContext _context) {
    Double value = 0.0;
    for (SNode child : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user")), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9746b0L, 0x6c32b212dc974792L, "games")))) {
      if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Battlefield 1")) {
        value = 2400.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Counter-Strike: Global Offensive")) {
        value = 1600.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Dota 2")) {
        value = 1600.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Elder Scrolls Online")) {
        value = 1600.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("GTA 5")) {
        value = 2133.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("H1Z1 King of the Kill")) {
        value = 1600.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Hearthstone")) {
        value = 1600.0;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("League of Legends")) {
        value = 1600.0;
      }
    }
    Double result = (value / 3200.0 * 100);
    String finalR = result.toString();
    char[] rArray = finalR.toCharArray();
    String temp = "";
    for (int i = 0; i < rArray.length; i++) {
      if (rArray[i] != '.') {
        temp += String.valueOf(rArray[i]);
      } else {
        break;
      }
    }
    return temp;
  }
  public static Object propertyMacro_GetPropertyValue_46256062281381827(final PropertyMacroContext _context) {
    int value = 0;
    for (SNode child : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user")), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9746b0L, 0x6c32b212dc974792L, "games")))) {
      if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Battlefield 1")) {
        value = 50;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Counter-Strike: Global Offensive")) {
        value = 8;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Dota 2")) {
        value = 15;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Elder Scrolls Online")) {
        value = 60;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("GTA 5")) {
        value = 65;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("H1Z1 King of the Kill")) {
        value = 20;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("Hearthstone")) {
        value = 20;
      } else if (SPropertyOperations.getString_def(child, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9748adL, 0x6c32b212dc97492aL, "game"), "League of Legends").equals("League of Legends")) {
        value = 12;
      }
    }
    return String.valueOf(value + "GB");
  }
  public static Object propertyMacro_GetPropertyValue_4109501086358702666(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(((SNode) SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48ee90L, 0x6c32b212dc974df7L, "user"))), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x6c32b212dc9746b0L, 0x6c32b212dc974757L, "budget")).toString();
  }
  public static Object propertyMacro_GetPropertyValue_4124506579258309183(final PropertyMacroContext _context) {
    String title = "PC Builder Version 1.0";
    return title;
  }
  public static Object propertyMacro_GetPropertyValue_4124506579257969610(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_709201640119321405(final PropertyMacroContext _context) {
    return SPropertyOperations.getString_def(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858273L, 0x1cca5a48a9d0cafbL, "cpuName"), "Intel Core i7-7700K");
  }
  public static Object propertyMacro_GetPropertyValue_4937345204455229590(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost"));
  }
  public static Object propertyMacro_GetPropertyValue_600042011701915218(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  public static Object propertyMacro_GetPropertyValue_600042011702136565(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost"));
  }
  public static Object propertyMacro_GetPropertyValue_600042011698920883(final PropertyMacroContext _context) {
    int count = 0;
    int totalCost = 0;
    for (SNode f : ListSequence.fromList(SNodeOperations.getChildren(_context.getNode()))) {
      if (SNodeOperations.isInstanceOf(f, MetaAdapterFactory.getConcept(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0xbc500a6864c3a83L, "ComputerLanguage.structure.PCCooling"))) {
        count++;
        totalCost += Integer.parseInt(SPropertyOperations.getString(((SNode) f), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")));
      }
    }
    return "Number of Case Fans: " + count + " Cost: " + totalCost;
  }
  public static Object propertyMacro_GetPropertyValue_4937345204453532999(final PropertyMacroContext _context) {
    return SPropertyOperations.getString_def(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f077L, 0x1cca5a48a9c8cf39L, "motherBoardName"), "Gigabyte Aorus Z270X-Gaming");
  }
  public static Object propertyMacro_GetPropertyValue_4937345204453250254(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost"));
  }
  public static Object propertyMacro_GetPropertyValue_709201640116048361(final PropertyMacroContext _context) {
    return SPropertyOperations.getString_def(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x55289da3a626f174L, 0x3a92f6bfe3c45730L, "psuName"), "Corsair RM750x");
  }
  public static Object propertyMacro_GetPropertyValue_4937345204453236054(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost"));
  }
  public static Object propertyMacro_GetPropertyValue_709201640116947559(final PropertyMacroContext _context) {
    return SPropertyOperations.getString_def(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858292L, 0x9d79722594c4657L, "wifiName"), "Gigabyte GC-WB867D-I");
  }
  public static Object propertyMacro_GetPropertyValue_709201640116947585(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost"));
  }
  public static Object propertyMacro_GetPropertyValue_9002918494564739546(final PropertyMacroContext _context) {
    String nameList = "";
    for (SNode r : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x9d797225990c617L, 0x9d797225990c633L, "ram")))) {
      nameList += SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858288L, 0x9d7972259431d37L, "ramName"), "Corsair Vengeance") + "-";
    }
    return nameList;
  }
  public static Object propertyMacro_GetPropertyValue_709201640121711995(final PropertyMacroContext _context) {
    int cost = 0;
    for (SNode r : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x9d797225990c617L, 0x9d797225990c633L, "ram")))) {
      cost += Integer.parseInt(SPropertyOperations.getString(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")));
    }
    return String.valueOf(cost);
  }
  public static Object propertyMacro_GetPropertyValue_4109501086358136339(final PropertyMacroContext _context) {
    String nameList = "";
    for (SNode r : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd67310eL, 0x853c707cd67312aL, "ssd")))) {
      nameList += SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef857e98L, 0x536ac53f1f57379cL, "driveName"), "Crucial MX300") + "-";
    }
    return nameList;
  }
  public static Object propertyMacro_GetPropertyValue_4109501086358136417(final PropertyMacroContext _context) {
    int cost = 0;
    for (SNode r : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd67310eL, 0x853c707cd67312aL, "ssd")))) {
      cost += Integer.parseInt(SPropertyOperations.getString(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")));
    }
    return String.valueOf(cost);
  }
  public static Object propertyMacro_GetPropertyValue_4109501086358208882(final PropertyMacroContext _context) {
    String nameList = "";
    for (SNode r : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd6c1ed4L, 0x853c707cd6c1ef0L, "gpu")))) {
      nameList += SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858269L, 0x7c6dc1906f8efeaeL, "gpuName"), "EVGA GeForce GTX 1080") + "-";
    }
    return nameList;
  }
  public static Object propertyMacro_GetPropertyValue_4109501086358208960(final PropertyMacroContext _context) {
    int cost = 0;
    for (SNode r : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd6c1ed4L, 0x853c707cd6c1ef0L, "gpu")))) {
      cost += Integer.parseInt(SPropertyOperations.getString(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")));
    }
    return String.valueOf(cost);
  }
  public static Object propertyMacro_GetPropertyValue_600042011697253727(final PropertyMacroContext _context) {
    String nameList = "";
    for (SNode r : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd6c1d59L, 0x853c707cd6c1d75L, "hdd")))) {
      nameList += SPropertyOperations.getString_def(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x58d6939bef858264L, 0x7c6dc1906f90352cL, "driveName"), "WD Blue") + "-";
    }
    return nameList;
  }
  public static Object propertyMacro_GetPropertyValue_600042011697253805(final PropertyMacroContext _context) {
    int cost = 0;
    for (SNode r : ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x853c707cd6c1d59L, 0x853c707cd6c1d75L, "hdd")))) {
      cost += Integer.parseInt(SPropertyOperations.getString(r, MetaAdapterFactory.getProperty(0xf4582f1691744942L, 0x8b09d4f72a7da258L, 0x2869488cfc48eec9L, 0x55289da3a62677c9L, "cost")));
    }
    return String.valueOf(cost);
  }
  public static Iterable<SNode> sourceNodesQuery_2695661618321220669(final SourceSubstituteMacroNodesContext _context) {
    return SNodeOperations.getChildren(_context.getNode());
  }
  public static Iterable<SNode> sourceNodesQuery_4937345204454496793(final SourceSubstituteMacroNodesContext _context) {
    return SNodeOperations.getChildren(_context.getNode());
  }
}
